<Window x:Name="mainWindow"  x:Class="Operation.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
        xmlns:c="clr-namespace:Operation.WPF.Converters"
        xmlns:l="http://wpflocalizeextension.codeplex.com"
        xmlns:helpers="clr-namespace:Operation.WPF.Helpers"
        l:LocalizeDictionary.DesignCulture="ru"
        l:LocalizeDictionary.OutputMissingKeys="True"
        l:ResxLocalizationProvider.DefaultAssembly="Operation.WPF"
        l:ResxLocalizationProvider.DefaultDictionary="Strings"
        md:DialogServiceViews.IsRegistered="True"
        mc:Ignorable="d"
        Title="{l:Loc Title}"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        Height="725" Width="900" ResizeMode="NoResize">
    <Window.Resources>
        <Style TargetType="Label" x:Key="RightCenter">
            <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="Button" x:Key="FunctionalButton">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Height" Value="25"></Setter>
        </Style>
        <Style TargetType="Button" x:Key="SolveButton" BasedOn="{StaticResource FunctionalButton}" >
            <Setter Property="IsEnabled" Value="False" />
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEditable, Converter={c:InverseBoolConverter}}" Value="True" />
                        <Condition Binding="{Binding ElementName=FuncTextBox, Path=(Validation.HasError)}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="True" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>



        <Style TargetType="xctk:IntegerUpDown" x:Key="NumericInput">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Value" Value="3"></Setter>
            <Setter Property="ShowButtonSpinner" Value="False"></Setter>
            <Setter Property="Minimum" Value="1"></Setter>
            <Setter Property="Maximum" Value="10"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
            <Setter Property="IsEnabled" Value="{Binding IsEditable}" />
        </Style>


    </Window.Resources>
    <StackPanel Orientation="Vertical">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
                <ColumnDefinition Width="120"/>
            </Grid.ColumnDefinitions>

            <!--intput-->
            <Label
                Grid.Column="0"
                Grid.Row="0"
                Content="{l:Loc VariableCount}"
                Style="{StaticResource RightCenter}" />
            <Label
                Grid.Column="0"
                Grid.Row="1"
                Content="{l:Loc ConditionCount}"
                Style="{StaticResource RightCenter}" />


            <xctk:IntegerUpDown
                Grid.Column="1" 
                Grid.Row="0"
                Value="{Binding VarCount}"
                Style="{StaticResource NumericInput}" />
            <xctk:IntegerUpDown
                Grid.Column="1"
                Grid.Row="1"
                Value="{Binding ConditionCount}"
                Style="{StaticResource NumericInput}" />
            <Button 
                Grid.Column="2"
                Grid.Row="0"
                Content="{l:Loc Generate}"
                Command="{Binding CreateCommand}"
                IsEnabled="{Binding IsEditable}"
                Style="{StaticResource FunctionalButton}" />
            <!--buttons-->


            <Button 
                Grid.Column="2"
                Grid.Row="1"    
                Content="{l:Loc Clear}"
                Command="{Binding ClearCommand}"
                IsEnabled="{Binding IsEditable, Converter={c:InverseBoolConverter}}"
                Style="{StaticResource FunctionalButton}" />

            <Button
                Grid.Column="3"
                Grid.Row="0"
                IsEnabled="{Binding IsEditable, Converter={c:InverseBoolConverter}}"
                Content="{l:Loc Save}"
                Style="{StaticResource FunctionalButton}" />
            <Button
                Grid.Column="3"
                Grid.Row="1"
                Content="{l:Loc Load}"
                Style="{StaticResource FunctionalButton}" />


            <!--function-->
            <Label  Grid.Row="0"
                    Grid.Column="4"
                    Grid.ColumnSpan="2"
                    Content="{l:Loc Function}"
                    Style="{StaticResource RightCenter}"
                    HorizontalContentAlignment="Center" />
            <ComboBox
                Grid.Row="0"
                Grid.Column="6"
                ItemsSource="{Binding Source={x:Static l:LocalizeDictionary.Instance}, Path=MergedAvailableCultures}"
                          SelectedItem="{Binding Source={x:Static l:LocalizeDictionary.Instance}, Path=Culture}" 
                          DisplayMemberPath="NativeName" />

            <Label
                Grid.Column="4"
                Grid.Row="1"
                Content="{l:Loc FuncDefenition}"
                Style="{StaticResource RightCenter}"/>

            <TextBox
                Grid.Row="1"
                Grid.Column="5"
                Name="FuncTextBox"
                IsEnabled = "{Binding IsEditable, Converter={c:InverseBoolConverter}}">
                <TextBox.Resources>
                    <helpers:BindingProxy x:Key="Proxy" Data="{Binding}"/>
                </TextBox.Resources>
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Background" Value="Pink"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding Path="FunctionCoefs" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <c:FuncCoefValidator>
                                <c:FuncCoefValidator.Variables>
                                    <helpers:VariablesWrapper Count="{Binding Data.VarCount, Source={StaticResource Proxy}}"/>
                                </c:FuncCoefValidator.Variables>
                            </c:FuncCoefValidator>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>

            </TextBox>

            <ComboBox
                Grid.Row="1"
                Grid.Column="6" 
                SelectedIndex="0"
                VerticalContentAlignment="Center"
                ItemsSource="{Binding Limits}"
                SelectedValue="{Binding Path=SelectedLim}"/>

        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="600"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="560"></RowDefinition>
                <RowDefinition Height="45"></RowDefinition>
            </Grid.RowDefinitions>

            <!-- DATA GRID-->
            <DataGrid  Margin="5,10,5,10" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" SelectionMode="Single"  CanUserAddRows="True" CanUserDeleteRows="True" IsReadOnly="False" AutoGenerateColumns="False" SelectionUnit="Cell" />


            <RichTextBox Margin="5,10,5,10" Grid.Column="1" Grid.Row="0" />

            <Button Grid.Column="1"
                    Grid.Row="1"
                    Content="{l:Loc Solve}"
                    Command="{Binding SolveCommand}"
                    Style="{StaticResource SolveButton}">

            </Button>


        </Grid>
    </StackPanel>
</Window>































































































































































































































































































































































































































































































































